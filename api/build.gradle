plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

apply plugin: 'war'
war {
    archiveName = 'api.war'
    baseName = 'api'
    version = '0.0.1'
}

group = 'com.api'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

bootRun {
    systemProperties = System.properties
}

repositories {
    mavenCentral()
}

dependencies {

//    implementation 'org.hibernate.orm:hibernate-core:6.1.5.Final'
    implementation 'org.springframework.data:spring-data-jpa:2.6.2'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    implementation 'org.hibernate:hibernate-entitymanager:5.6.14.Final'
    implementation group: 'org.springframework', name: 'spring-orm', version: '6.0.2'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'me.paulschwarz:spring-dotenv:2.5.4'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

task getDeps(type: Copy) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from configurations.compileClasspath into "libs/"
    from configurations.runtimeClasspath into "libs/"
}

tasks.named('test') {
    useJUnitPlatform()
}